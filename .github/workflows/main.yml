name: SFDX Validate

on: [push]

env:
  SFDX_CLIENTID: ${{ secrets.SFDX_CLIENTID }}
  SFDX_JWT_KEY: ${{ secrets.SFDX_JWT_KEY }}

jobs:
  run-tests:
    name: "Run SFDX Validate"
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest
    # Skips this job if '[skip-ci]' is included in any commit message from this push
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - uses: actions/checkout@v2

    # Store secret for dev hub
    - name: 'Populate auth file with DEVHUB_SFDX_URL secret'
      shell: bash
      run: 'echo ${{ secrets.DEVHUB_SFDX_URL}} > ./DEVHUB_SFDX_URL.txt'

    # Authenticate dev hub
    - name: 'Authenticate Dev Hub'
      run: 'sfdx force:auth:sfdxurl:store -f ./DEVHUB_SFDX_URL.txt -a devhub -d'

    - name: 'Run Apex tests'
      run: 'sfdx force:apex:test:run -c -r human -d ./tests/apex -w 20 -l RunLocalTests -u devhub'

    # Upload code coverage data
    - name: 'Upload code coverage for Apex to Codecov.io'
      uses: codecov/codecov-action@v1
      with:
          flags: Apex


  sfdxvalidate:
    name: "Run SFDX Validate"
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest
    # Skips this job if '[skip-ci]' is included in any commit message from this push
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - run: npm install
    - name: Clean metadata
      run: npm run packageXml
    - name: Write Out JWT Key
      shell: bash
      run: |
        echo "$SFDX_JWT_KEY" > jwt.key
    - name: Set up auth
      run: | 
        sfdx force:auth:jwt:grant --jwtkeyfile jwt.key --username "${{ secrets.SFDX_USERNAME_PROD }}" --clientid $SFDX_CLIENTID -s
    - name: Validate Source
      run: sfdx force:source:deploy -l RunLocalTests -c -p force-app

  cliscannerbestpractices:
    name: "CLI Scan for Best Practice Problems"
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest
    # Skips this job if '[skip-ci]' is included in any commit message from this push
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Salesforce CLI Scanner
      run:  printf 'y\n' | sfdx plugins:install @salesforce/sfdx-scanner
    - name: Run Salesforce CLI Scanner
      run: sfdx scanner:run -v --target "force-app/main/default/classes/*.cls" -c "Best Practices"

  cliscannerperformance:
    name: "CLI Scan for Performance Problems"
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest
    # Skips this job if '[skip-ci]' is included in any commit message from this push
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Salesforce CLI Scanner
      run:  printf 'y\n' | sfdx plugins:install @salesforce/sfdx-scanner
    - name: Run Salesforce CLI Scanner
      run: sfdx scanner:run -v --target "force-app/main/default/classes/*.cls" -c "Performance"

  cliscannerall:
    name: "CLI Scan for All Problems"
    runs-on: ubuntu-latest
    container:
      image: salesforce/salesforcedx:latest
    # Skips this job if '[skip-ci]' is included in any commit message from this push
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"
    steps:
    # Checks out a copy of your repository on the ubuntu-latest machine
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Install Salesforce CLI Scanner
      run:  printf 'y\n' | sfdx plugins:install @salesforce/sfdx-scanner
    - name: Run Salesforce CLI Scanner
      run: sfdx scanner:run -v --target "force-app/main/default/classes/*.cls"


  # apexdocs:
  #   name: "Apex Docs"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: actions/setup-node@v2
  #   with:
  #     node-version: '12'
  #     check-latest: true
  #   - run: npm install
  #   - run: npm run apexdocs
